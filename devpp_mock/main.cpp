#include <windows.h>

#include <SPI.h>
#include <EEPROM.h>
#include <SerialClass.h>

#include "DataReciever.h"
#include "LightMachine.h"
#include "Screen.h"

#define EEPROM_SIZE 1024

uint8_t pixels[SCREEN_PIXELS * 3];
uint8_t progCopy[EEPROM_SIZE];

DataReciever dataReciever;
LightMachine lightMachine;

Screen screen;

void setup() 
{
  Serial.begin(9600);
  SPI.begin();
  SPI.setBitOrder(MSBFIRST);
  SPI.setDataMode(SPI_MODE0); 
  SPI.setClockDivider(SPI_CLOCK_DIV16);
  delay(1);
  randomSeed(analogRead(0));
  
  screen.init(pixels);
  
  dataReciever.init();
  //lightMachine.init(&screen);
}

void loop() 
{
  if(dataReciever.data() > 0)
  {
  	lightMachine.init(&screen, progCopy);
  }
  
  lightMachine.execute();
  
  screen.send();

 // delay(1);
}

int main(int argc, char** argv)
 {
	//Serial.set("\x5f\x18\x00\xc0\x18\x00\xc1\x18\xff\xc2\x18\x00\xc3\x18\x00\xc4\x0c\x80\x82\x83\x84\x16\x80\x18\x01\x01\xc0\x80\x18\x31\x12\x60\x5e\x18\x00\xc0\x81\x18\x01\x01\xc1\x81\x18\x02\x12\x60\x31\x18\x00\xc1\x81\x18\x00\x14\x60\x40\x18\x00\xc2\x18\x00\xc4\x18\xff\xc4\x81\x18\x01\x14\x60\x4f\x18\x00\xc2\x18\xff\xc3\x18\x00\xc4\x81\x18\x02\x14\x60\x5e\x18\xff\xc2\x18\x00\xc3\x18\x00\xc4\x11", 95 + 2);
	//Serial.set("\x9b\x18\x00\xc0\x18\x00\xc1\x18\xff\xc2\x18\x00\xc3\x18\x00\xc4\x0c\x80\x82\x83\x84\x16\x80\x18\x01\x01\xc0\x80\x18\x31\x12\x60\x9a\x18\x00\xc0\x81\x18\x01\x01\xc1\x81\x18\x06\x12\x60\x31\x18\x00\xc1\x81\x18\x00\x14\x60\x40\x18\x00\xc2\x18\x00\xc4\x18\xff\xc4\x81\x18\x01\x14\x60\x4f\x18\x00\xc2\x18\xff\xc3\x18\x00\xc4\x81\x18\x02\x14\x60\x5e\x18\xff\xc2\x18\x00\xc3\x18\x00\xc4\x81\x18\x03\x14\x60\x6d\x18\xff\xc2\x18\xff\xc3\x18\x00\xc4\x81\x18\x04\x14\x60\x7c\x18\xff\xc2\x18\x00\xc3\x18\xff\xc4\x81\x18\x05\x14\x60\x8b\x18\x00\xc2\x18\xff\xc3\x18\xff\xc4\x81\x18\x06\x14\x60\x9a\x18\xff\xc2\x18\xff\xc3\x18\xff\xc4\x11", 155 + 2);
	Serial.set("\x45\x18\x00\xc0\x18\x00\xc1\x18\x00\xc2\x18\x0a\xc3\x18\x00\xc4\x0c\x19\x03\xe8\x0d\x83\x18\x01\x01\xc3\x83\x18\x09\x12\x60\x31\x18\x00\xc3\x0f\x18\xff\x03\xc0\x0f\x18\xff\x03\xc1\x0f\x18\xff\x03\xc2\x84\x80\x81\x82\x16\x84\x18\x01\x01\xc4\x84\x18\x31\x12\x60\x44\x18\x00\xc4\x11", 69 + 2);

	//Serial.set("\x70\xc0\x41\xc8\x00\x00\x80\x09\xc0\x00\x00\x00\x00\x81\x41\xc0\x43\x7f\x00\x00\x41\xc0\x40\xa0\x00\x00\x03\xc0\x43\x7f\x00\x00\x41\xc0\x40\xa0\x00\x00\x03\x02\x19\x41\xc0\x3f\x80\x00\x00\x01\x81\x41\xc0\x42\x48\x00\x00\x16\xc0\x00\x00\x00\x43\x13\xc0\x00\x00\x00\x0d\x12\x40\xc0\x43\x7f\x00\x00\xc0\x43\x7f\x00\x00\xc0\x43\x7f\x00\x00\x19\x40\xc0\x3f\x80\x00\x00\x01\x80\x40\xc0\x42\x44\x00\x00\x15\xc0\x00\x00\x00\x6f\x13\xc0\x00\x00\x00\x00\x80\x14", 112 + 2);
	//Serial.set("\x97\xc0\x00\x00\x00\x00\x80\xc0\x43\x7f\x00\x00\x81\xc0\x00\x00\x00\x00\x82\xc0\x00\x00\x00\x00\x83\x09\x40\x41\x42\x43\x19\x40\xc0\x3f\x80\x00\x00\x01\x80\x40\xc0\x42\x44\x00\x00\x15\xc0\x00\x00\x00\x96\x13\xc0\x00\x00\x00\x00\x80\x43\xc0\x43\x7f\x00\x00\x17\xc0\x00\x00\x00\x58\x13\xc0\x43\x7f\x00\x00\x81\xc0\x00\x00\x00\x00\x83\xc0\x00\x00\x00\x00\x83\x42\xc0\x43\x7f\x00\x00\x17\xc0\x00\x00\x00\x77\x13\xc0\x00\x00\x00\x00\x81\xc0\x00\x00\x00\x00\x82\xc0\x43\x7f\x00\x00\x83\x41\xc0\x43\x7f\x00\x00\x17\xc0\x00\x00\x00\x96\x13\xc0\x00\x00\x00\x00\x81\xc0\x43\x7f\x00\x00\x82\xc0\x00\x00\x00\x00\x83\x14", 151 + 2);

	setup();
	

	while(true)
	{
		loop();
		SPI.draw();
	}
	
	return 0;
}
